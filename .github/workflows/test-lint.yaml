name: Python testing and linting
# Credit: modified from github actions documentation examples

on: [push]

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.8]

    steps:
    - uses: actions/checkout@v2
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install libpostal and deps
      run: |
        sudo apt-get install curl autoconf automake libtool pkg-config libspatialindex-dev
        cd ../
        git clone https://github.com/openvenues/libpostal
        cd libpostal
        ./bootstrap.sh
        mkdir libpostal-data
        ./configure --datadir=$PWD/libpostal-data
        make -j4
        sudo make install
        sudo ldconfig
        cd ../

    - name: Setup data
      run: |
        python -m pip install --upgrade pip
        python -m pip install flake8 pytest pytest-cov black poetry
        poetry export --dev -f requirements.txt > requirements.txt
        python -m pip install -r requirements.txt

        ls
        echo $PWD
        mkdir data
        cd data
        echo $PWD
        git clone https://github.com/mggg-states/MA-shapefiles
        cd MA-shapefiles
        unzip MA_precincts_02_10.zip -d 02_10/ 
        unzip MA_precincts_12_16.zip -d 12_16
        cd ../../
        
    - name: Lint with flake8 and black
      run: |
        # stop the build if there are Python syntax errors or undefined names
        python -m flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
        python -m flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
        python -m black --check .
    - name: Test with pytest
      run: |
        echo $PWD
        ls data/
        ls data/MA-shapefiles/
        ls data/MA-shapefiles/12_16/
        pytest --cov=./ --cov-config=.coveragerc
      env: # Or as an environment variable
        MONGO_DB_SERVER: ${{ secrets.MONGO_DB_SERVER }}
    - name: Upload results to codecov
      run: |
        bash <(curl -s https://codecov.io/bash)
      env: # Or as an environment variable
        CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}
